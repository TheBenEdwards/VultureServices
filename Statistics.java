/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vultureservices;

import java.sql.*;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;

/**
 *
 *
 */
public class Statistics extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Statistics() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jbtMenu = new javax.swing.JButton();
        jlbUser = new javax.swing.JLabel();
        jlbWelcome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Time needed for different task types ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(" labourtime for job vs motors");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Time needed vs Time used for task");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Employee name vs Time needed for task");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jbtMenu.setText("Finish and Close");
        jbtMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtMenuActionPerformed(evt);
            }
        });

        jlbUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlbUser.setText("jLabel1");
        jlbUser.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jlbWelcome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlbWelcome.setText("Welcome");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton5))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 249, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jbtMenu))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlbWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbUser)))
                .addContainerGap(194, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbUser)
                    .addComponent(jlbWelcome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jbtMenu)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066");

                Statement statement = connect.createStatement();

                ResultSet resultSet = statement.executeQuery("select * from task");
                DefaultPieDataset dataset = new DefaultPieDataset();

                while (resultSet.next()) {
                    dataset.setValue(
                            resultSet.getString("task"),
                            Double.parseDouble(resultSet.getString("time_needed")));
                }
                JFreeChart chart = ChartFactory.createPieChart(
                        "A graph to show the time needed for the different task types", // chart title           
                        dataset, // data           
                        true, // include legend          
                        true,
                        false);

                int width = 560; //560
                /* Width of the image */
                int height = 370; //370
                /* Height of the image */
                // );
                ChartFrame frame = new ChartFrame("pie chart", chart);
                frame.setVisible(true);
                frame.setSize(400, 650);

            } catch (SQLException ex) {
                Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton2ActionPerformed


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066");

                Statement statement = connect.createStatement();

                ResultSet resultSet = statement.executeQuery("select * from motor JOIN job on job.job_id = motor.motor_id");
                DefaultCategoryDataset dataset = new DefaultCategoryDataset();

                while (resultSet.next()) {
                    String motor = resultSet.getString("motor");
                    int labour_time = resultSet.getInt("labour_time");
                    dataset.setValue(labour_time, "labour_time", motor);
                }

                JFreeChart chart = ChartFactory.createBarChart3D(
                        "A graph to show the job labourtime for each motor", "motors", "labourtime", dataset, PlotOrientation.VERTICAL, true, true, false);

                CategoryPlot plot = chart.getCategoryPlot();
                BarRenderer renderer = (BarRenderer) plot.getRenderer();

                renderer.setSeriesPaint(0, Color.blue);

                int width = 640;
                /* Width of the image */
                int height = 600;
                ChartFrame frame = new ChartFrame("3D bar chart", chart);
                frame.setVisible(true);
                frame.setSize(600, 850);
            } catch (SQLException ex) {
                Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066");
                Statement statement = connect.createStatement();

                ResultSet resultSet = statement.executeQuery("select time_needed, time_used from task");
                DefaultCategoryDataset dataset = new DefaultCategoryDataset();

                while (resultSet.next()) {
                    String time_needed = resultSet.getString("time_needed");
                    int time_used = resultSet.getInt("time_used");
                    dataset.setValue(time_used, "time_used", time_needed);
                }
                JFreeChart chart = ChartFactory.createLineChart(
                        "A graph to show the time needed and time used for a task", "time_needed", "time_used", dataset, PlotOrientation.VERTICAL, true, true, false);

                int width = 640;
                /* Width of the image */
                int height = 480;
                ChartFrame frame = new ChartFrame("Line chart", chart);
                frame.setVisible(true);
                frame.setSize(400, 650);
            } catch (SQLException ex) {
                Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066");

                Statement statement = connect.createStatement();

                ResultSet resultSet = statement.executeQuery("select * from employees JOIN task on task.task_id= employees.emp_id");
                DefaultCategoryDataset dataset = new DefaultCategoryDataset();

                while (resultSet.next()) {
                    String emp_name = resultSet.getString("emp_name");
                    int time_needed = resultSet.getInt("time_needed");
                    dataset.setValue(time_needed, "time_needed", emp_name);
                }

                JFreeChart chart = ChartFactory.createBarChart(
                        "A graph to show the time needed for each task to be carried out by an employee", "employee name", "time needed", dataset, PlotOrientation.VERTICAL, true, true, false);

                CategoryPlot plot = chart.getCategoryPlot();
                BarRenderer renderer = (BarRenderer) plot.getRenderer();

                renderer.setSeriesPaint(0, Color.blue);

                int width = 640;    //640
                /* Width of the image */
                int height = 600; //600
                ChartFrame frame = new ChartFrame("Bar chart", chart);
                frame.setVisible(true);
                frame.setSize(600, 850); //400,650
            } catch (SQLException ex) {
                Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jbtMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtMenuActionPerformed

        String user = jlbUser.getText();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                String query = "SELECT * FROM employees WHERE emp_name =?";
                PreparedStatement ps = con.prepareStatement(query);
                ps.setString(1, user);
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    String role = rs.getString("emp_role");
                    dispose();

                    if (role.equals("Technician")) {
                        TechnicianHome tf = new TechnicianHome();
                        tf.setVisible(true);
                        tf.setSize(800, 600);
                        tf.setLocationRelativeTo(null);
                        tf.jlbUser.setText(user);
                    }

                    if (role.equals("Customer Services")) {
                        CSHome cf = new CSHome();
                        cf.setVisible(true);
                        cf.setSize(800, 600);
                        cf.setLocationRelativeTo(null);
                        cf.jlbUser.setText(user);
                    }

                    if (role.equals("Finance")) {
                        FinanceHome ff = new FinanceHome();
                        ff.setVisible(true);
                        ff.setSize(800, 600);
                        ff.setLocationRelativeTo(null);
                        ff.jlbUser.setText(user);
                    }

                    if (role.equals("Human Resources")) {
                        CSHome hf = new CSHome();
                        hf.setVisible(true);
                        hf.setSize(800, 600);
                        hf.setLocationRelativeTo(null);
                        hf.jlbUser.setText(user);
                    }
                    if (role.equals("Manager") || role.equals("IT Services")) {
                        ManagerHome mf = new ManagerHome();
                        mf.setVisible(true);
                        mf.setSize(800, 600);
                        mf.setLocationRelativeTo(null);
                        mf.jlbUser.setText(user);
                    }

                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtMenuActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Statistics.class.getName()).log(Level.SEVERE, null, ex);
        }

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Statistics().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtMenu;
    public javax.swing.JLabel jlbUser;
    public javax.swing.JLabel jlbWelcome;
    // End of variables declaration//GEN-END:variables
}
