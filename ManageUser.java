/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vultureservices;

import java.awt.Component;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Matty
 */
public class ManageUser extends javax.swing.JFrame {

    /**
     * Creates new form RemoveUser
     */
    public ManageUser() {
        initComponents();
        setLocationRelativeTo(null);
        DefaultTableModel model = (DefaultTableModel) jtbUserAccounts.getModel();
        model.setRowCount(0);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                String query = "SELECT * FROM employees";
                PreparedStatement ps = con.prepareStatement(query);
                ResultSet rs = ps.executeQuery();

                while (rs.next()) {
                    String id = rs.getString("emp_id");
                    String user = rs.getString("emp_name");
                    String pass = rs.getString("password");
                    String role = rs.getString("emp_role");
                    model.addRow(new Object[]{id, user, pass, role});
                    jtbUserAccounts.setModel(model);
                    setSize(860, 600);

                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) jtbUserAccounts.getModel();
        model.setRowCount(0);
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                String query = "SELECT * FROM employees";
                PreparedStatement ps = con.prepareStatement(query);
                ResultSet rs = ps.executeQuery();

                while (rs.next()) {
                    String id = rs.getString("emp_id");
                    String user = rs.getString("emp_name");
                    String role = rs.getString("emp_role");
                    String pass = rs.getString("password");
                    model.addRow(new Object[]{id, user, pass, role});
                    jtbUserAccounts.setModel(model);
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jlbWelcome = new javax.swing.JLabel();
        jbtSignout = new javax.swing.JButton();
        jbtMenu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbUserAccounts = new javax.swing.JTable();
        jbtRemove = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbtUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jpsRePassword = new javax.swing.JPasswordField();
        jlblRePassword = new javax.swing.JLabel();
        jpsPassword = new javax.swing.JPasswordField();
        jlblPassword = new javax.swing.JLabel();
        jtfUsername = new javax.swing.JTextField();
        jlblUsername = new javax.swing.JLabel();
        jbtInsert = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jlbUser = new javax.swing.JLabel();
        jcmRole = new javax.swing.JComboBox<>();
        jlbEmpRole = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Edit User");

        jlbWelcome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlbWelcome.setText("Welcome");

        jbtSignout.setText("Signout");
        jbtSignout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSignoutActionPerformed(evt);
            }
        });

        jbtMenu.setText("Menu");
        jbtMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtMenuActionPerformed(evt);
            }
        });

        jtbUserAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account ID", "Username", "Password", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbUserAccounts.setRequestFocusEnabled(false);
        jtbUserAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbUserAccountsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbUserAccounts);
        if (jtbUserAccounts.getColumnModel().getColumnCount() > 0) {
            jtbUserAccounts.getColumnModel().getColumn(0).setResizable(false);
            jtbUserAccounts.getColumnModel().getColumn(0).setPreferredWidth(60);
            jtbUserAccounts.getColumnModel().getColumn(1).setResizable(false);
            jtbUserAccounts.getColumnModel().getColumn(2).setResizable(false);
            jtbUserAccounts.getColumnModel().getColumn(3).setResizable(false);
            jtbUserAccounts.getColumnModel().getColumn(3).setPreferredWidth(80);
        }

        jbtRemove.setText("Remove Row");
        jbtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveActionPerformed(evt);
            }
        });

        jLabel2.setText("REMOVE: Select a row and click \"Remove Row\" ");

        jbtUpdate.setText("Update Row");
        jbtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateActionPerformed(evt);
            }
        });

        jLabel3.setText("UPDATE: Select row, Fill in the fields and click \"Update Row\"");

        jlblRePassword.setText("Confirm Password: ");

        jlblPassword.setText("Password: ");

        jtfUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfUsernameActionPerformed(evt);
            }
        });

        jlblUsername.setText("Username: ");

        jbtInsert.setText("Insert Row");
        jbtInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInsertActionPerformed(evt);
            }
        });

        jLabel6.setText("INSERT: Fill in the fields below and click \"Insert Row\"");

        jlbUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlbUser.setText("jLabel1");
        jlbUser.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jcmRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Technician", "Customer Services", "IT Services", "Finance", "Human Resources", "Manager" }));
        jcmRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmRoleActionPerformed(evt);
            }
        });

        jlbEmpRole.setText("Employee Role:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(324, 324, 324)
                        .addComponent(jbtMenu))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtSignout)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(jlblUsername)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jlbEmpRole)
                                            .addGap(18, 18, 18)
                                            .addComponent(jcmRole, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jlblPassword)
                                                .addComponent(jlblRePassword))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jpsPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                                .addComponent(jpsRePassword)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jbtInsert)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jbtUpdate)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jbtRemove))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbWelcome)
                    .addComponent(jLabel1)
                    .addComponent(jbtMenu)
                    .addComponent(jlbUser))
                .addGap(1, 1, 1)
                .addComponent(jbtSignout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblUsername)
                            .addComponent(jtfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbEmpRole)
                            .addComponent(jcmRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jpsPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblPassword))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlblRePassword)
                            .addComponent(jpsRePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtInsert)
                            .addComponent(jbtUpdate)
                            .addComponent(jbtRemove)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtSignoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSignoutActionPerformed
        dispose();
        Login lf = new Login();
        lf.setVisible(true);
        lf.pack();
        lf.setSize(800, 600);
        lf.setLocationRelativeTo(null);
    }//GEN-LAST:event_jbtSignoutActionPerformed

    private void jbtMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtMenuActionPerformed

        String user = jlbUser.getText();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                String query = "SELECT * FROM employees WHERE emp_name =?";
                PreparedStatement ps = con.prepareStatement(query);
                ps.setString(1, user);
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    String role = rs.getString("emp_role");
                    dispose();

                    if (role.equals("Technician")) {
                        TechnicianHome tf = new TechnicianHome();
                        tf.setVisible(true);
                        tf.setSize(800, 600);
                        tf.setLocationRelativeTo(null);
                        tf.jlbUser.setText(user);
                    }

                    if (role.equals("Customer Services")) {
                        CSHome cf = new CSHome();
                        cf.setVisible(true);
                        cf.setSize(800, 600);
                        cf.setLocationRelativeTo(null);
                        cf.jlbUser.setText(user);
                    }

                    if (role.equals("Finance")) {
                        FinanceHome ff = new FinanceHome();
                        ff.setVisible(true);
                        ff.setSize(800, 600);
                        ff.setLocationRelativeTo(null);
                        ff.jlbUser.setText(user);
                    }

                    if (role.equals("Human Resources")) {
                        CSHome hf = new CSHome();
                        hf.setVisible(true);
                        hf.setSize(800, 600);
                        hf.setLocationRelativeTo(null);
                        hf.jlbUser.setText(user);
                    }
                    if (role.equals("Manager") || role.equals("IT Services")) {
                        ManagerHome mf = new ManagerHome();
                        mf.setVisible(true);
                        mf.setSize(800, 600);
                        mf.setLocationRelativeTo(null);
                        mf.jlbUser.setText(user);
                    }

                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtMenuActionPerformed


    private void jbtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateActionPerformed
        String user = jtfUsername.getText();
        String pass = String.valueOf(jpsPassword.getPassword());
        String repass = String.valueOf(jpsRePassword.getPassword());
        String role = jcmRole.getSelectedItem().toString();

        if (user.equals("") || pass.equals("") || repass.equals("") || role.equals("")) {
            JOptionPane.showMessageDialog(null, "Make sure all fields are filled in");
        } else if (pass.equals(repass)) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                    String query = "UPDATE employees SET emp_name=?, password=?, emp_role=? WHERE emp_id=?";
                    PreparedStatement ps = con.prepareStatement(query);
                    int row = jtbUserAccounts.getSelectedRow();
                    String cell = jtbUserAccounts.getModel().getValueAt(row, 0).toString();
                    ps.setString(4, cell);
                    ps.setString(1, user);
                    ps.setString(2, pass);
                    ps.setString(3, role);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Record updated successfully.");
                    updateTable();
                    setSize(800, 600);

                } catch (SQLException ex) {
                    Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please make sure passwords match");
        }
    }//GEN-LAST:event_jbtUpdateActionPerformed


    private void jbtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveActionPerformed
        int row = jtbUserAccounts.getSelectedRow();
        String cell = jtbUserAccounts.getModel().getValueAt(row, 0).toString();

        int remove = JOptionPane.showConfirmDialog((Component) null, "Are you sure you want to remove this record?", "Remove", JOptionPane.YES_NO_OPTION);
        if (remove == 0) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                    String query = "DELETE FROM employees WHERE emp_id = " + cell;
                    PreparedStatement ps = con.prepareStatement(query);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Row Deleted");
                    updateTable();
                    setSize(800, 600);
                } catch (SQLException ex) {
                    Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Error removing row");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbtRemoveActionPerformed

    private void jbtInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInsertActionPerformed
        String user = jtfUsername.getText();
        String role = jcmRole.getSelectedItem().toString();
        String pass = String.valueOf(jpsPassword.getPassword());
        String repass = String.valueOf(jpsRePassword.getPassword());

        PreparedStatement ps;
        if (user.equals("") || pass.equals("") || repass.equals("") || role.equals("")) {
            JOptionPane.showMessageDialog(null, "Make sure all fields are filled in");
        } else if (pass.equals(repass)) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                    String query = "INSERT INTO employees (emp_name, emp_role, password) VALUES (?,?,?)";

                    ps = con.prepareStatement(query);
                    ps.setString(1, user);
                    ps.setString(2, role);
                    ps.setString(3, pass);
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "Row inserted successfully");
                    updateTable();
                    setSize(800, 600);
                } catch (SQLException ex) {
                    Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManageUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
        else {
            JOptionPane.showMessageDialog(null, "Please make sure passwords match");
    }

    }//GEN-LAST:event_jbtInsertActionPerformed

    private void jtfUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfUsernameActionPerformed

    private void jtbUserAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbUserAccountsMouseClicked
        int row = jtbUserAccounts.getSelectedRow();
        String selection = jtbUserAccounts.getModel().getValueAt(row, 0).toString();
        String query = "SELECT * FROM employees WHERE emp_id = " + selection;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/vulture", "root", "24652066")) {
                PreparedStatement ps = con.prepareStatement(query);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    jtfUsername.setText(rs.getString("emp_name"));
                    jpsPassword.setText(rs.getString("password"));
                    jpsRePassword.setText(rs.getString("password"));
                    jcmRole.setSelectedItem(rs.getString("emp_role"));
}
            } catch (SQLException ex) {
                Logger.getLogger(ManageUser.class
.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error");
            

}
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageUser.class
.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jtbUserAccountsMouseClicked

    private void jcmRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcmRoleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtInsert;
    private javax.swing.JButton jbtMenu;
    private javax.swing.JButton jbtRemove;
    private javax.swing.JButton jbtSignout;
    private javax.swing.JButton jbtUpdate;
    private javax.swing.JComboBox<String> jcmRole;
    private javax.swing.JLabel jlbEmpRole;
    public javax.swing.JLabel jlbUser;
    public javax.swing.JLabel jlbWelcome;
    private javax.swing.JLabel jlblPassword;
    private javax.swing.JLabel jlblRePassword;
    private javax.swing.JLabel jlblUsername;
    private javax.swing.JPasswordField jpsPassword;
    private javax.swing.JPasswordField jpsRePassword;
    private javax.swing.JTable jtbUserAccounts;
    private javax.swing.JTextField jtfUsername;
    // End of variables declaration//GEN-END:variables
}
